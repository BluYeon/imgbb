{"version":3,"sources":["Row.jsx","Table.jsx","IMGBB.jsx","App.js","reportWebVitals.js","index.js"],"names":["Row","props","text","count","React","useState","copy","setCopy","useEffect","id","toString","onClick","Table","rows","content","map","arr","index","url","copytxt","style","border","IMGBB","results","setResults","a","document","getElementById","value","result","split","forEach","element","idx","includes","push","slice","indexOf","display","flexDirection","cols","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"8OAsBeA,MAnBf,SAAcC,GAAM,IAITC,EAAcD,EAAdC,KAAKC,EAASF,EAATE,MAJI,EAKQC,IAAMC,SAAS,QALvB,mBAKTC,EALS,KAKHC,EALG,KAOhBH,IAAMI,WAAU,WACZD,EAAQ,UACT,CAACN,IACJ,IAAIQ,EAAE,eAAWN,EAAMO,YACvB,OACI,+BACI,6BAAKR,IACL,6BAAI,cAAC,kBAAD,CAAiBA,KAAMA,EAAvB,SAA6B,wBAAQO,GAAIA,EAAIE,QAAS,kBAAMJ,EAAQ,WAAvC,SAAmDD,YCIjFM,MAlBf,YAA6B,IACnBC,EADkB,EAAXC,QACQC,KAAI,SAACC,EAAIC,GAAL,OAAe,cAAC,EAAD,CAAKf,KAAMc,EAAIE,IAAKf,MAAOc,EAAOE,QAAS,QAAaF,MAChG,OACQ,wBAAOG,MAAO,CAAEC,OAAQ,mBAAxB,UACI,gCACA,+BACI,yCACA,6CAGJ,gCACCR,QCyBFS,MApCf,WAAkB,IAAD,EACiBjB,mBAAS,IAD1B,mBACNkB,EADM,KACGC,EADH,iDAGd,8BAAAC,EAAA,6DACSX,EAAUY,SAASC,eAAe,WAAWC,MAC7CC,EAAS,GAEIf,EAAQgB,MAAM,MAEpBC,SAAQ,SAACC,EAAQC,GACpBD,EAAQE,SAAS,OACjBL,EAAOM,KAAK,CACRjC,KAAM,OACNgB,IAAKc,EAAQI,MAAMJ,EAAQK,QAAQ,QAAU,EAAGL,EAAQK,QAAQ,OAAS,KAG7ER,EAAOM,KACH,CACAjC,KAAK,OACLgB,IAAIc,EAAQI,MAAMJ,EAAQK,QAAQ,QAAU,EAAGL,EAAQK,QAAQ,OAAS,QAhBzF,SAmBWb,EAAWK,GAnBtB,4CAHc,sBAyBb,OACQ,sBAAKT,MAAO,CAAEkB,QAAS,QAAvB,UACI,sBAAKlB,MAAO,CAAEkB,QAAS,OAAQC,cAAe,UAA9C,UACI,0BAAU9B,GAAG,UAAUI,KAAK,KAAK2B,KAAK,OACtC,wBAAQ7B,QA7BX,2CA6BG,uBAEJ,cAAC,EAAD,CAAOG,QAASS,QCxBjBkB,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF5B,SAASC,eAAe,SAM1BgB,M","file":"static/js/main.578666e3.chunk.js","sourcesContent":["import React from 'react'\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard'\r\n\r\nfunction Row (props){\r\n    // function submitFunc(id) {\r\n    //     document.getElementById(id).textContent = \"Copied\";\r\n    // }\r\n    const {text,count} = props\r\n    const [copy, setCopy] = React.useState(\"Copy\")\r\n\r\n    React.useEffect(() => {\r\n        setCopy(\"Copy\")\r\n    }, [props])\r\n    let id = `copy ${count.toString()}`;\r\n    return(\r\n        <tr>\r\n            <td>{text}</td>\r\n            <td><CopyToClipboard text={text}><button id={id} onClick={() => setCopy(\"Copied\")}>{copy}</button></CopyToClipboard></td>\r\n        </tr>\r\n    )\r\n\r\n}\r\nexport default Row;","import React from 'react'\r\nimport Row from './Row.jsx'\r\n\r\nfunction Table({ content }) {\r\n    const rows = content.map((arr,index) => <Row text={arr.url} count={index} copytxt={\"Copy\"} key={index}/>);\r\n    return (\r\n            <table style={{ border: '1px solid black' }}>\r\n                <thead>\r\n                <tr>\r\n                    <th>Content</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {rows}\r\n                </tbody>\r\n                \r\n            </table>\r\n    )\r\n}\r\n\r\nexport default Table;","import React, { useState } from 'react'\r\nimport Table from './Table.jsx'\r\n\r\nfunction IMGBB() {\r\n    const [results, setResults] = useState([])\r\n\r\n   async function submitFunc() {\r\n        var content = document.getElementById(\"content\").value;\r\n        var result = [];\r\n        \r\n        var contentarr = content.split(\"\\n\");\r\n        \r\n        contentarr.forEach((element,idx) => {\r\n            if (element.includes(\"jpg\")) {\r\n                result.push({\r\n                    text: \"Copy\",\r\n                    url: element.slice(element.indexOf(\"src=\") + 5, element.indexOf(\"jpg\") + 3)\r\n                })\r\n            } else {\r\n                result.push(\r\n                    {\r\n                    text:\"Copy\",\r\n                    url:element.slice(element.indexOf(\"src=\") + 5, element.indexOf(\"png\") + 3)})\r\n            }\r\n        });\r\n        await setResults(result)\r\n        \r\n    }\r\n    return (\r\n            <div style={{ display: 'flex' }}>\r\n                <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                    <textarea id=\"content\" rows=\"50\" cols=\"50\"></textarea>\r\n                    <button onClick={submitFunc}>Submit</button>\r\n                </div>\r\n                <Table content={results} />\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default IMGBB;","import \"./App.css\";\nimport IMGBB from './IMGBB.jsx'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <IMGBB />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}